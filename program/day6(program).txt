1)
package com.day6;

import java.util.ArrayList;
import java.util.List;

public class Example1 {

	public static void main(String[] args) {
		ArrayList l1=new ArrayList();
		System.out.println(l1.size());  //0
		l1.add("a");
		l1.add("b");
		l1.add(11);   //autoboxing  //int is automatically convert to wrapper class
		//l1.add(new Integer(l1);
		l1.add(3.14);
		l1.add(11);
		System.out.println(l1.size());   //5
		System.out.println(l1);    //always print on []box show its collection
		
		ArrayList l3=new ArrayList();
	
		List l2=new ArrayList();  //dynamic method dispatch
		l2.addAll(l1);
		System.out.println(l2.size());
		System.out.println(l2);
		
		
		List l4=new ArrayList();
		l4.add(4);
		l4.add(6);
		System.out.println(l4.contains(4));
		System.out.println(l2.containsAll(l1));
		
		
		
		
		
		List l5=new ArrayList();
		l5.add("a");
		l5.add("a");
		l5.add("1");
		l5.add("2");l5.add("3");
		System.out.println(l5);
		
		
		
		List l6=new ArrayList();
		l6.add("a");
		l6.add("a");
		l6.add("1");
		System.out.println(l6);
		
		
		l5.retainAll(l6);
		System.out.println(l5);
		System.out.println(l6);
			
		
	}    

}



2)package com.day6;

import java.util.ArrayList;
import java.util.List;

public class Example2 {

	public static void main(String[] args) {
		List<String> l1=new ArrayList<>();
		System.out.println(l1.size());
        l1.add("z");
        l1.add("b");
        l1.add("d");
        l1.add(1,"a");
        l1.add("c");
        l1.add(3,"g");
        System.out.println(l1.size());
        System.out.println(l1);
        
        System.out.println(l1.get(2));
        System.out.println(l1.get(5));
        System.out.println(l1.contains("f"));
        l1.remove(2);       //remove 2 index element
        l1.remove("f"); //remove direct object
        System.out.println(l1);
        
        
        
        
	}

}



3)


package com.day6;

import java.util.LinkedList;
import java.util.List;

public class Example3 {

	public static void main(String[] args) {
	LinkedList<Integer> l=new LinkedList<>();
	System.out.println(l.size());
	l.add(10);
	l.add(4);
	l.add(2, 8);
	l.add(10);
	l.addFirst(7);
	l.addLast(20);
	l.add(3,15);
	System.out.println(l.size());
	System.out.println(l);
	
	
	
	System.out.println(l.get(5));
	System.out.println(l.getFirst());
	System.out.println(l.getLast());
	l.remove(2);
	l.removeFirst();
	l.removeLast();
	System.out.println(l);

	}

}




4)package com.day6;

import java.util.Enumeration;
import java.util.Vector;

public class Example4 {

	public static void main(String[] args) {
		
		Vector <Integer>v=new Vector<>(3,2);   //here 2 is capacity increase manner
		System.out.println(v.size());  //0
		System.out.println(v.capacity());  //3
		v.addElement(1);
		v.addElement(2);
		v.addElement(3);
		System.out.println(v.size()); //3
		System.out.println(v.capacity()); //3
		
		v.addElement(4);   //size-->3+2=5
		v.addElement(5);
		v.addElement(6);  //size-->5+2=7
		System.out.println(v.size());//8
		System.out.println(v.capacity());  //9
		System.out.println(v);
		System.out.println(v.contains(3));
		System.out.println(v.firstElement());
		System.out.println(v.lastElement());
		System.out.println(v.elementAt(4));
		v.setElementAt(20, 0);   //remove 1st element set as 20
		System.out.println(v);
		
		  //Enumeration interface
		Enumeration<Integer> e=v.elements();
		while(e.hasMoreElements()) {
			System.out.println(e.nextElement());
	}	
		
			

	}

}





5)
package com.day6;

import java.util.TreeSet;

public class Example5 {

	public static void main(String[] args) {
		/*HashSet<String> s=new HashSet<>();
		System.out.println(s.size());
		s.add("v");
		s.add("c");
		s.add("f");
		s.add("a");
		s.add("r");
		s.add("y");
		System.out.println(s.size());  //6
		System.out.println(s);*/
		
		
		/*LinkedHashSet<String> s=new LinkedHashSet<>();
		System.out.println(s.size());
		s.add("v");
		s.add("c");
		s.add("f");
		s.add("a");
		s.add("r");
		s.add("y");
		System.out.println(s.size());  //6
		System.out.println(s);*/
		
		
		TreeSet<String> s=new TreeSet<>();
		System.out.println(s.size());
		s.add("v");
		s.add("c");
		s.add("f");
		s.add("a");
		s.add("r");
		s.add("y");
		System.out.println(s.size());  //6
		System.out.println(s);
		System.out.println(s.first());	
		System.out.println(s.last());
		System.out.println(s.headSet("f"));
		System.out.println(s.tailSet("f"));
		
		
		TreeSet<Integer> ts=new TreeSet<>();
		ts.add(12);
		ts.add(11);
		ts.add(16);
		ts.add(15);
		System.out.println(ts);  // 11 12 15 16
		System.out.println(ts.ceiling(13));//15
		//return smallest elt less than r equal to given list
		System.out.println(ts.floor(13));//13
		//return the greatest elt less than r equal to given list
		System.out.println(ts.pollFirst());
		//retrieves and remove the first ele
		System.out.println(ts.pollLast());
		//retrieves and remove the last ele
		System.out.println(ts);  // 12 15
				
		
		

	}

}




6)

package com.day6;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;


public class Example6 {

	public static void main(String[] args) {
	 List<Integer> l=new ArrayList<>();
	 l.add(10);
	 l.add(5);
	 l.add(15);
	 l.add(10);
	 l.add(20);
	 System.out.println(l);
	 
	//forloop 
	 for ( int i=0 ;i< l.size();i++) {
		 System.out.println(l.get(i));
	 }
	 System.out.println();
	 
	 //for each
	 for(int a:l) {
		 System.out.println(a);
		 
		 
     
		 
		 System.out.println("using Iterator interface");
		 Iterator<Integer> itr=l.iterator();
		 while(itr.hasNext()) {
			// Integer i=(Integer) itr.next();
			//System.out.println(i);
			System.out.println(itr.next());
			
		 }
		 
		 
		 
		 
		 System.out.println("using ListItreator interface");
		 ListIterator<Integer> ltr=l.listIterator();
		 while(ltr.hasNext()) {
			 Integer i=ltr.next();
			 ltr.set(i+2);}
			 while(ltr.hasPrevious())
			 {
				 System.out.println(ltr.previous());
			 }
			 
			 
		 }
		 
		 
		 		 
		 
	 }
	 
	 
	 
	 
	}


